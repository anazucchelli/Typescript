!function(n){var t={};function e(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return n[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=n,e.c=t,e.d=function(n,t,o){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:o})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var r in n)e.d(o,r,function(t){return n[t]}.bind(null,r));return o},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=11)}([function(n,t,e){"use strict";var o,r=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},a=function(){var n={};return function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}n[t]=e}return n[t]}}(),i=[];function c(n){for(var t=-1,e=0;e<i.length;e++)if(i[e].identifier===n){t=e;break}return t}function l(n,t){for(var e={},o=[],r=0;r<n.length;r++){var a=n[r],l=t.base?a[0]+t.base:a[0],s=e[l]||0,u="".concat(l," ").concat(s);e[l]=s+1;var f=c(u),d={css:a[1],media:a[2],sourceMap:a[3]};-1!==f?(i[f].references++,i[f].updater(d)):i.push({identifier:u,updater:b(d,t),references:1}),o.push(u)}return o}function s(n){var t=document.createElement("style"),o=n.attributes||{};if(void 0===o.nonce){var r=e.nc;r&&(o.nonce=r)}if(Object.keys(o).forEach((function(n){t.setAttribute(n,o[n])})),"function"==typeof n.insert)n.insert(t);else{var i=a(n.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}return t}var u,f=(u=[],function(n,t){return u[n]=t,u.filter(Boolean).join("\n")});function d(n,t,e,o){var r=e?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(n.styleSheet)n.styleSheet.cssText=f(t,r);else{var a=document.createTextNode(r),i=n.childNodes;i[t]&&n.removeChild(i[t]),i.length?n.insertBefore(a,i[t]):n.appendChild(a)}}function p(n,t,e){var o=e.css,r=e.media,a=e.sourceMap;if(r?n.setAttribute("media",r):n.removeAttribute("media"),a&&btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleSheet)n.styleSheet.cssText=o;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(o))}}var h=null,m=0;function b(n,t){var e,o,r;if(t.singleton){var a=m++;e=h||(h=s(t)),o=d.bind(null,e,a,!1),r=d.bind(null,e,a,!0)}else e=s(t),o=p.bind(null,e,t),r=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)};return o(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap)return;o(n=t)}else r()}}n.exports=function(n,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=r());var e=l(n=n||[],t);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var o=0;o<e.length;o++){var r=c(e[o]);i[r].references--}for(var a=l(n,t),s=0;s<e.length;s++){var u=c(e[s]);0===i[u].references&&(i[u].updater(),i.splice(u,1))}e=a}}}},function(n,t,e){"use strict";n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e=function(n,t){var e=n[1]||"",o=n[3];if(!o)return e;if(t&&"function"==typeof btoa){var r=(i=o,c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),"/*# ".concat(l," */")),a=o.sources.map((function(n){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([r]).join("\n")}var i,c,l;return[e].join("\n")}(t,n);return t[2]?"@media ".concat(t[2]," {").concat(e,"}"):e})).join("")},t.i=function(n,e,o){"string"==typeof n&&(n=[[null,n,""]]);var r={};if(o)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(r[i]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&r[l[0]]||(e&&(l[2]?l[2]="".concat(e," and ").concat(l[2]):l[2]=e),t.push(l))}},t}},function(n,t,e){var o=e(0),r=e(3);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[n.i,r,""]]);var a={insert:"head",singleton:!1},i=(o(r,a),r.locals?r.locals:{});n.exports=i},function(n,t,e){(t=e(1)(!1)).push([n.i,"* {\n\tbox-sizing: border-box;\n}\n\nhtml {\n\tfont-size: 20px;\n}\n\nbody {\n\tmargin: 30px 0 0 0;\n\tpadding: 0;\n\tdisplay: flex;\n\tjustify-content: center;\n\theight: 100%;\n\tbackground-color: #6a1b9a;\n\tcolor: #FFF;\n\tfont-family: 'Roboto',sans-serif;\n}\n\nmain {\n\tbackground-color: #9c4dcc;\n\tpadding: 20px;\n\twidth: 400px;;\n}\n\nform{\n\tdisplay: flex;\n\tmargin-bottom: 10px;\n}\n\nform input {\n\tdisplay: block;\n\twidth:calc(100% - 100px);\n\tfont-size: 1rem;\n\tpadding: 5px;\n\talign-items: stretch;\n}\n\nform button {\n\twidth:100px;\n\tdisplay: block;\n\tfont-size: .7rem;\n\tborder: none;\n}\n\ntable{\n\twidth: 100%;\n\ttable-layout:fixed;\n\tborder-collapse: collapse;\n}\n\ntd{\n\tborder-bottom: 1px solid rgba(255,255,255,.3);\n\tpadding: 10px 0;\n}\n\ntr:hover td{\n\tbackground-color: rgba(255,255,255,.1);\n}\n\n\ntd:nth-child(1){\n\twidth: 24px;\n}\n\ntd:nth-child(2){\n\tcursor: default;\n}\n\ntd:nth-child(3){\n\twidth: 36px;\n}\n\ntr.done td:nth-child(2){\n\ttext-decoration: line-through;\n}\n\ntable input[type=checkbox]{\n\tcursor: pointer;\n}\n\ntable i{\n\tcursor: pointer;\n\topacity: .8;\n}\n\ntable i:hover{\n\topacity: 1;\n}\n",""]),n.exports=t},function(n,t,e){var o=e(0),r=e(5);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[n.i,r,""]]);var a={insert:"head",singleton:!1},i=(o(r,a),r.locals?r.locals:{});n.exports=i},function(n,t,e){var o=e(1),r=e(6),a=e(7),i=e(8),c=e(9),l=e(10);t=o(!1);var s=r(a),u=r(i),f=r(c),d=r(l);t.push([n.i,'@font-face {\n  font-family: "Material Icons";\n  font-style: normal;\n  font-weight: 400;\n  src: url('+s+');\n  /* For IE6-8 */\n  src: local("Material Icons"), local("MaterialIcons-Regular"), url('+u+') format("woff2"), url('+f+') format("woff"), url('+d+') format("truetype");\n}\n\n.material-icons {\n  font-family: "Material Icons";\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;\n  display: inline-block;\n  line-height: 1;\n  text-transform: none;\n  letter-spacing: normal;\n  word-wrap: normal;\n  white-space: nowrap;\n  direction: ltr;\n  /* Support for all WebKit browsers. */\n  -webkit-font-smoothing: antialiased;\n  /* Support for Safari and Chrome. */\n  text-rendering: optimizeLegibility;\n  /* Support for Firefox. */\n  -moz-osx-font-smoothing: grayscale;\n  /* Support for IE. */\n  font-feature-settings: \'liga\';\n}\n',""]),n.exports=t},function(n,t,e){"use strict";n.exports=function(n,t){return t||(t={}),"string"!=typeof(n=n&&n.__esModule?n.default:n)?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),t.hash&&(n+=t.hash),/["'() \t\n]/.test(n)||t.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n)}},function(n,t,e){"use strict";e.r(t),t.default=e.p+"fonts/MaterialIcons-Regular.eot"},function(n,t,e){"use strict";e.r(t),t.default=e.p+"fonts/MaterialIcons-Regular.woff2"},function(n,t,e){"use strict";e.r(t),t.default=e.p+"fonts/MaterialIcons-Regular.woff"},function(n,t,e){"use strict";e.r(t),t.default=e.p+"fonts/MaterialIcons-Regular.ttf"},function(n,t,e){"use strict";e.r(t);e(2),e(4);var o,r=function(){function n(n,t,e){void 0===e&&(e=!1),this.descricao=n,this.prioridade=t,this._concluido=e}return Object.defineProperty(n.prototype,"feito",{set:function(n){this._concluido=n},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"concluido",{get:function(){return this._concluido},enumerable:!0,configurable:!0}),n}();!function(n){n[n.baixa=0]="baixa",n[n.media=1]="media",n[n.alta=2]="alta"}(o||(o={}));var a=function(){function n(){this._lista=[]}return n.prototype.addTarefa=function(){for(var n,t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];(n=this._lista).push.apply(n,t)},n.prototype.removeTarefa=function(n){var t=this._lista.indexOf(n);t>-1&&this._lista.splice(t,1)},n}(),i=new r("Escovar os dentes",o.alta),c=new r("Lavar Pratos",o.alta),l=new r("Sair de Casa",o.alta),s=new a;s.addTarefa(i,c,l);var u=document.getElementById("form"),f=document.getElementById("tf_2do");u.addEventListener("submit",(function(n){n.preventDefault();var t=new r(f.value,o.baixa);s.addTarefa(t),console.log(s)}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,